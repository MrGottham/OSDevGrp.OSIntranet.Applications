@model AccountIdentificationViewModel;
<input type="hidden" asp-for="Accounting.AccountingNumber" />
<input type="hidden" asp-for="Accounting.Name" />
@if (Model.EditMode == EditMode.Create && (Model.IsProtected == false || Model.IsProtected && string.IsNullOrWhiteSpace(Model.AccountNumber)))
{
    <div class="form-group">
        <label asp-for="AccountNumber"></label>
        <input asp-for="AccountNumber" class="form-control" onkeyup="$().applyUpperCase('#@Html.IdFor(m => m.AccountNumber)');" />
        <span asp-validation-for="AccountNumber" class="text-danger"></span>
    </div>
}
else
{
    <div class="form-group">
        <label asp-for="AccountNumber"></label>
        <input asp-for="AccountNumber" class="form-control" readonly />
    </div>
}
<div class="form-group">
	<label asp-for="AccountName"></label>
    @if (Model.IsProtected == false || Model.IsProtected && string.IsNullOrWhiteSpace(Model.AccountName))
    {
	    <input asp-for="AccountName" class="form-control" />
	    <span asp-validation-for="AccountName" class="text-danger"></span>
    }
    else
    {
        <input asp-for="AccountName" class="form-control" readonly />
    }
</div>
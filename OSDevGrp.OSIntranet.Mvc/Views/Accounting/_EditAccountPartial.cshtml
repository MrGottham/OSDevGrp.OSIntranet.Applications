@using System.Linq
@model AccountViewModel;
<div class="row">
    <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
        <form id="editAccountForm" asp-area="" asp-controller="Accounting" asp-action="@Model.GetAction()">
            <input type="hidden" asp-for="EditMode" />
            @if (Model.AccountGroup != null && Model.AccountGroup.IsKnownAccountGroup(Model.AccountGroups) && string.IsNullOrWhiteSpace(Model.AccountGroup.Name) == false)
            {
                <input type="hidden" asp-for="AccountGroup.Name" />
                <input type="hidden" asp-for="AccountGroup.AccountGroupType" />
            }
            else
            {
                <input type="hidden" id="@Html.IdFor(m => m.AccountGroup.Name)" name="@Html.NameFor(m => m.AccountGroup.Name)" value="@Model.AccountGroups.FirstOrDefault()?.Name" />
                <input type="hidden" id="@Html.IdFor(m => m.AccountGroup.AccountGroupType)" name="@Html.NameFor(m => m.AccountGroup.AccountGroupType)" value="@Model.AccountGroups.FirstOrDefault()?.AccountGroupType" />
            }
            @if (Model.EditMode == EditMode.Edit && Model.ValuesAtStatusDate != null)
            {
                <input type="hidden" asp-for="ValuesAtStatusDate.Balance" />
                <input type="hidden" asp-for="ValuesAtStatusDate.Credit" />
                <input type="hidden" asp-for="ValuesAtStatusDate.Available" />
            }
            @if (Model.EditMode == EditMode.Edit && Model.ValuesAtEndOfLastMonthFromStatusDate != null)
            {
                <input type="hidden" asp-for="ValuesAtEndOfLastMonthFromStatusDate.Balance" />
                <input type="hidden" asp-for="ValuesAtEndOfLastMonthFromStatusDate.Credit" />
                <input type="hidden" asp-for="ValuesAtEndOfLastMonthFromStatusDate.Available" />
            }
            @if (Model.EditMode == EditMode.Edit && Model.ValuesAtEndOfLastYearFromStatusDate != null)
            {
                <input type="hidden" asp-for="ValuesAtEndOfLastYearFromStatusDate.Balance" />
                <input type="hidden" asp-for="ValuesAtEndOfLastYearFromStatusDate.Credit" />
                <input type="hidden" asp-for="ValuesAtEndOfLastYearFromStatusDate.Available" />
            }
            <h3>@Model.Accounting.Name.ToHtmlString()</h3>
            <div id="accountAccordion">
	            <div class="card">
		            <div class="card-header">
			            <a class="card-link" data-toggle="collapse" href="#collapseCoreData">
				            <h5>Stamdata</h5>
			            </a>
		            </div>
                    <div id="collapseCoreData" class="collapse show" data-parent="#accountAccordion">
			            <div class="card-body">
				            @await Html.PartialAsync("_EditAccountIdentificationPartial", Model)
				            @await Html.PartialAsync("_EditAccountCoreDataPartial", Model)
				            <div class="form-group">
					            <label asp-for="AccountGroup"></label>
					            @if (Model.IsProtected == false)
					            {
						            <select asp-for="AccountGroup.Number" asp-items="Model.AccountGroups.SelectListFor(Model.AccountGroup?.Number)" class="form-control" onchange="javascript:$().applyValue('#@Html.IdFor(m => m.AccountGroup.Name)', $(this).find('option:selected').text());"></select>
						            <span asp-validation-for="AccountGroup" class="text-danger"></span>
					            }
					            else
					            {
									<input type="hidden" asp-for="AccountGroup.Number" />
						            <select asp-items="Model.AccountGroups.SelectListFor(Model.AccountGroup?.Number)" class="form-control" readonly disabled></select>
					            }
				            </div>
			            </div>
		            </div>
	            </div>
				@if (Model.EditMode == EditMode.Edit && (Model.ValuesAtStatusDate != null || Model.ValuesAtEndOfLastMonthFromStatusDate != null || Model.ValuesAtEndOfLastYearFromStatusDate != null))
				{
                    <div class="card d-none d-lg-block d-xl-block">
						<div class="card-header">
							<a class="card-link" data-toggle="collapse" href="#collapseActualStatus">
								<h5>Aktuel status</h5>
							</a>
						</div>
						<div id="collapseActualStatus" class="collapse show" data-parent="#accountAccordion">
							<div class="card-body">
								<div class="table-responsive">
									<table class="table table-sm">
										<thead>
										<tr>
											<th></th>
											<th class="text-right">Saldo</th>
											<th class="text-right">Kredit</th>
											<th class="text-right">Disponibel</th>
										</tr>
										</thead>
										<tbody>
										@if (Model.ValuesAtStatusDate != null)
										{
											<tr>
												<td>@Html.LabelFor(m => m.ValuesAtStatusDate)</td>
												<td class="text-right">@Model.ValuesAtStatusDate.Balance.AsCurrency()</td>
												<td class="text-right">@Model.ValuesAtStatusDate.Credit.AsCurrency()</td>
												<td class="text-right">@Model.ValuesAtStatusDate.Available.AsCurrency()</td>
											</tr>
										}
										@if (Model.ValuesAtEndOfLastMonthFromStatusDate != null)
										{
											<tr>
												<td>@Html.LabelFor(m => m.ValuesAtEndOfLastMonthFromStatusDate)</td>
												<td class="text-right">@Model.ValuesAtEndOfLastMonthFromStatusDate.Balance.AsCurrency()</td>
												<td class="text-right">@Model.ValuesAtEndOfLastMonthFromStatusDate.Credit.AsCurrency()</td>
												<td class="text-right">@Model.ValuesAtEndOfLastMonthFromStatusDate.Available.AsCurrency()</td>
											</tr>
										}
										@if (Model.ValuesAtEndOfLastYearFromStatusDate != null)
										{
											<tr>
												<td>@Html.LabelFor(m => m.ValuesAtEndOfLastYearFromStatusDate)</td>
												<td class="text-right">@Model.ValuesAtEndOfLastYearFromStatusDate.Balance.AsCurrency()</td>
												<td class="text-right">@Model.ValuesAtEndOfLastYearFromStatusDate.Credit.AsCurrency()</td>
												<td class="text-right">@Model.ValuesAtEndOfLastYearFromStatusDate.Available.AsCurrency()</td>
											</tr>
										}
										</tbody>
									</table>
								</div>
							</div>
						</div>
					</div>
				}
				@if (Model.CreditInfos != null)
				{
					@foreach (KeyValuePair<short, CreditInfoCollectionViewModel> item in Model.CreditInfos.OrderBy(m => m.Key))
					{
						<div class="card">
							<div class="card-header">
								<a class="card-link" data-toggle="collapse" href="@($"#collapseCreditInfoCollectionFor{item.Key}")">
									<h5>@Html.LabelFor(m => m.CreditInfos)&nbsp;@Html.Raw(item.Key)</h5>
								</a>
							</div>
							<div id="@($"collapseCreditInfoCollectionFor{item.Key}")" class="collapse show" data-parent="#accountAccordion">
								<div class="card-body">
									<div class="table-responsive">
										<table class="table table-sm">
											<thead>
												<tr>
													<th></th>
													<th class="text-right">Kredit</th>
													<th class="text-right">Saldo</th>
												</tr>
											</thead>
											<tbody>
												@for (int i = 0; i < item.Value.Count; i++)
												{
													int elementNo = i;
													<input type="hidden" asp-for="CreditInfos.Items[item.Key].Items[elementNo].Year" />
													<input type="hidden" asp-for="CreditInfos.Items[item.Key].Items[elementNo].Month" />
													<tr>
														<td>@Html.DisplayFor(m => m.CreditInfos.Items[item.Key].Items[elementNo].MonthAsText)</td>
														<td>
															@if (Model.IsProtected || Model.CreditInfos.Items[item.Key].Items[elementNo].Editable == false)
															{
																<div class="form-group">
																	<input type="hidden" asp-for="CreditInfos.Items[item.Key].Items[elementNo].Credit"/>
																	<input type="text" value="@Model.CreditInfos.Items[item.Key].Items[elementNo].Credit.AsCurrency()" class="form-control text-right" readonly/>
																</div>
															}
															else
															{
																<div class="form-group">
																	<input asp-for="CreditInfos.Items[item.Key].Items[elementNo].Credit" class="form-control text-right" />
																	<span asp-validation-for="CreditInfos.Items[item.Key].Items[elementNo].Credit" class="text-danger float-right text-wrap"></span>
																</div>
															}
														</td>
														<td>
															@if (Model.CreditInfos.Items[item.Key].Items[elementNo].Editable == false || Model.CreditInfos.Items[item.Key].Items[elementNo].IsCurrentMonth)
															{
																<div class="form-group">
																	<input type="hidden" asp-for="CreditInfos.Items[item.Key].Items[elementNo].Balance" />
																	<input type="text" value="@Model.CreditInfos.Items[item.Key].Items[elementNo].Balance.AsCurrency()" class="form-control text-right" readonly />
																</div>
															}
														</td>
													</tr>
												}
											</tbody>
										</table>
									</div>
								</div>
							</div>
						</div>
					}
				}
				@if (Model.EditMode == EditMode.Edit && Model.PostingLines != null)
				{
					<div class="card">
						<div class="card-header">
							<a class="card-link" data-toggle="collapse" href="#collapsePostingLineCollection">
								<h5>@Html.LabelFor(m => m.PostingLines)</h5>
							</a>
						</div>
						<div id="collapsePostingLineCollection" class="collapse show" data-parent="#accountAccordion">
							<div class="card-body">
								@await Html.PartialAsync("_PostingLineCollectionPartial", Model.PostingLines)
							</div>
						</div>
					</div>
				}
				@if (Model.EditMode == EditMode.Edit)
				{
					<div class="card">
						<div class="card-header">
							<a class="card-link" data-toggle="collapse" href="#collapseAuditable">
								<h5>Revisionsoplysninger</h5>
							</a>
						</div>
						<div id="collapseAuditable" class="collapse show" data-parent="#accountAccordion">
							<div class="card-body">
								@await Html.PartialAsync("_AuditablePartial", Model)
							</div>
						</div>
					</div>
				}
			</div>
            @await Html.PartialAsync("_EditAccountIdentificationOptionsPartial", Model)
        </form>
    </div>
</div>
@model AccountingViewModel;
@if (string.IsNullOrWhiteSpace(Model.Name) == false || Model.EditMode == EditMode.None)
{
    <div class="row">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
            <div class="float-left flex-grow-1">
                @if (string.IsNullOrWhiteSpace(Model.Name) == false)
                {
                    <h3>@Model.Name</h3>
                }
            </div>
            <div class="float-right">
                @if (Model.EditMode == EditMode.None && Model.Deletable)
                {
                    <div class="fa-stack">
                        <a href="#" onclick="javascript:$().editAccounting();"><i class="fas fa-pen"></i></a>
                        <a href="#" onclick="javascript:$().askForDeletion('Slet regnskab', '@Model.GetDeletionUrl(Url)', @Model.GetDeletionData(Html), null, true);"><i class="fas fa-trash"></i></a>
                    </div>
                }
                else if (Model.EditMode == EditMode.None)
                {
                    <a href="#" onclick="javascript:$().editAccounting();"><i class="fas fa-pen"></i></a>
                }
            </div>
        </div>
    </div>
}
@if (Model.EditMode == EditMode.Create || Model.EditMode == EditMode.Edit)
{
    <div class="row d-block">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
            @await Html.PartialAsync("_EditAccountingPartial", Model)
        </div>
    </div>
}
else
{
    <div id="editAccounting" class="row d-none">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
            @await Html.PartialAsync("_EditAccountingPartial", Model)
        </div>
    </div>
    <div id="presentAccounting" class="row d-block">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
            <div id="accountingAccordion">
                <div class="card">
                    <div class="card-header">
                        <a class="card-link" data-toggle="collapse" href="#collapseBasicInformation">
                            <h5>Stamdata</h5>
                        </a>
                    </div>
                    <div id="collapseBasicInformation" class="collapse show" data-parent="#accountingAccordion">
                        <div class="card-body">
                            @if (Model.LetterHead.IsKnownLetterHead(Model.LetterHeads) && string.IsNullOrWhiteSpace(Model.LetterHead.Name) == false)
                            {
                                <dl>
                                    <dt class="small">@Html.LabelFor(m => m.LetterHead)</dt>
                                    <dd>@Html.Raw(Model.LetterHead.Name)</dd>
                                </dl>
                            }
                            <dl>
                                <dt class="small">@Html.LabelFor(m => m.BalanceBelowZero)</dt>
                                <dd>@Model.BalanceBelowZero.EnumDisplayNameFor()</dd>
                            </dl>
                            <dl>
                                <dt class="small">@Html.LabelFor(m => m.BackDating)</dt>
                                <dd>@Html.Raw(Model.BackDating)&nbsp;@Html.Raw(Model.BackDating == 1 ? "dag" : "dage")</dd>
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header">
                        <a class="card-link" data-toggle="collapse" href="#collapseActualStatus">
                            <h5>Aktuel status</h5>
                        </a>
                    </div>
                    <div id="collapseActualStatus" class="collapse show" data-parent="#accountingAccordion">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12 col-sm-12 col-md-12 col-lg-12 d-xl-none">
                                    @if (Model.BudgetAccounts?.ValuesForMonthOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForMonthOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat denne måned:") })
                                    }
                                    @if (Model.BudgetAccounts?.ValuesForLastMonthOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForLastMonthOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat sidste måned:") })
                                    }
                                    @if (Model.BudgetAccounts?.ValuesForYearToDateOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForYearToDateOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat år til dato:") })
                                    }
                                    @if (Model.BudgetAccounts?.ValuesForLastYearOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForLastYearOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat sidste år:") })
                                    }
                                    @if (Model.Accounts?.ValuesAtStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_AccountCollectionValuesPartial", Model.Accounts.ValuesAtStatusDate, new[] { new KeyValuePair<string, object>("Header", "Balance pr. dags dato:") })
                                    }
                                    @if (Model.Accounts?.ValuesAtEndOfLastMonthFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_AccountCollectionValuesPartial", Model.Accounts.ValuesAtEndOfLastMonthFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Balance ved sidste måneds afslutning:") })
                                    }
                                    @if (Model.Accounts?.ValuesAtEndOfLastYearFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_AccountCollectionValuesPartial", Model.Accounts.ValuesAtEndOfLastYearFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Balance ved sidste års afslutning:") })
                                    }
                                    @if (Model.ContactAccounts?.ValuesAtStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_ContactAccountCollectionValuesPartial", Model.ContactAccounts.ValuesAtStatusDate, new[] { new KeyValuePair<string, object>("Header", "Saldi pr. dags dato:") })
                                    }
                                    @if (Model.ContactAccounts?.ValuesAtEndOfLastMonthFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_ContactAccountCollectionValuesPartial", Model.ContactAccounts.ValuesAtEndOfLastMonthFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Saldi ved sidste måneds afslutning:") })
                                    }
                                    @if (Model.ContactAccounts?.ValuesAtEndOfLastYearFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_ContactAccountCollectionValuesPartial", Model.ContactAccounts.ValuesAtEndOfLastYearFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Saldi ved sidste års afslutning:") })
                                    }
                                </div>
                                <div class="col-xl-4 d-none d-xl-block">
                                    @if (Model.BudgetAccounts?.ValuesForMonthOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForMonthOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat denne måned:") })
                                    }
                                    @if (Model.BudgetAccounts?.ValuesForLastMonthOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForLastMonthOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat sidste måned:") })
                                    }
                                    @if (Model.BudgetAccounts?.ValuesForYearToDateOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForYearToDateOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat år til dato:") })
                                    }
                                    @if (Model.BudgetAccounts?.ValuesForLastYearOfStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_BudgetAccountCollectionValuesPartial", Model.BudgetAccounts.ValuesForLastYearOfStatusDate, new[] { new KeyValuePair<string, object>("Header", "Resultat sidste år:") })
                                    }
                                </div>
                                <div class="col-xl-4 d-none d-xl-block">
                                    @if (Model.Accounts?.ValuesAtStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_AccountCollectionValuesPartial", Model.Accounts.ValuesAtStatusDate, new[] { new KeyValuePair<string, object>("Header", "Balance pr. dags dato:") })
                                    }
                                    @if (Model.Accounts?.ValuesAtEndOfLastMonthFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_AccountCollectionValuesPartial", Model.Accounts.ValuesAtEndOfLastMonthFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Balance ved sidste måneds afslutning:") })
                                    }
                                    @if (Model.Accounts?.ValuesAtEndOfLastYearFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_AccountCollectionValuesPartial", Model.Accounts.ValuesAtEndOfLastYearFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Balance ved sidste års afslutning:") })
                                    }
                                </div>
                                <div class="col-xl-4 d-none d-xl-block">
                                    @if (Model.ContactAccounts?.ValuesAtStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_ContactAccountCollectionValuesPartial", Model.ContactAccounts.ValuesAtStatusDate, new[] { new KeyValuePair<string, object>("Header", "Saldi pr. dags dato:") })
                                    }
                                    @if (Model.ContactAccounts?.ValuesAtEndOfLastMonthFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_ContactAccountCollectionValuesPartial", Model.ContactAccounts.ValuesAtEndOfLastMonthFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Saldi ved sidste måneds afslutning:") })
                                    }
                                    @if (Model.ContactAccounts?.ValuesAtEndOfLastYearFromStatusDate != null)
                                    {
                                        @await Html.PartialAsync("_ContactAccountCollectionValuesPartial", Model.ContactAccounts.ValuesAtEndOfLastYearFromStatusDate, new[] { new KeyValuePair<string, object>("Header", "Saldi ved sidste års afslutning:") })
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (string.IsNullOrWhiteSpace(Model.PostingJournalKey) == false && Model.PostingJournal != null || string.IsNullOrWhiteSpace(Model.PostingJournalResultKey) == false && Model.PostingJournalResult != null || Model.PostingLines != null)
                {
                    <div class="card">
                        <div class="card-header">
                            <a class="card-link" data-toggle="collapse" href="#collapsePosting">
                                <h5>Bogføring</h5>
                            </a>
                        </div>
                        <div id="collapsePosting" class="collapse show" data-parent="#accountingAccordion">
                            <div class="card-body">
                                @if (string.IsNullOrWhiteSpace(Model.PostingJournalKey) == false && Model.PostingJournal != null)
                                {
                                    @await Html.PartialAsync("_PostingJournalPartial", Model.PostingJournal, new[] { new KeyValuePair<string, object>("PostingJournalKey", Model.PostingJournalKey), new KeyValuePair<string, object>("Header", "Bogføringskladde") })
                                }
                                @if (string.IsNullOrWhiteSpace(Model.PostingJournalResultKey) == false && Model.PostingJournalResult?.PostingWarnings != null)
                                {
                                    @await Html.PartialAsync("_PostingWarningCollectionPartial", Model.PostingJournalResult.PostingWarnings, new[] { new KeyValuePair<string, object>("AccountingNumber", Model.AccountingNumber), new KeyValuePair<string, object>("PostingJournalResultKey", Model.PostingJournalResultKey) })
                                }
                                @if (Model.PostingLines != null)
                                {
                                    @await Html.PartialAsync("_PostingLineCollectionPartial", Model.PostingLines, new[] { new KeyValuePair<string, object>("Header", "Seneste bogført") })
                                }
                            </div>
                        </div>
                    </div>
                }
                @if (Model.BudgetAccounts != null && Model.BudgetAccounts.Count > 0)
                {
                    <div class="card d-none d-md-block d-lg-block d-xl-block">
                        <div class="card-header">
                            <a class="card-link" data-toggle="collapse" href="#collapseResult">
                                <h5>Resultat</h5>
                            </a>
                        </div>
                        <div id="collapseResult" class="collapse" data-parent="#accountingAccordion">
                            <div class="card-body">
                                <dl>
                                    <dd><a href="@Model.GetMakeMonthlyAccountingStatementMarkdownUrl(Url)"><i class="fab fa-markdown"></i>&nbsp;Månedsopgørelse</a></dd>
                                    <dd><a href="@Model.GetMakeAnnualAccountingStatementMarkdownUrl(Url)"><i class="fab fa-markdown"></i>&nbsp;Årsopgørelse</a></dd>
                                    <dd class="mb-0"><a href="@Model.GetExportAnnualResultToCsvUrl(Url)"><i class="fas fa-download"></i>&nbsp;Eksportér resultat</a></dd>
                                </dl>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th class="d-none d-lg-block d-xl-block text-right">Budget</th>
                                                <th class="text-right">Resultat</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (KeyValuePair<BudgetAccountGroupViewModel, BudgetAccountCollectionViewModel> item in Model.BudgetAccounts)
                                            {
                                                <tr>
                                                    <td>@item.Key.Name.ToHtmlString()</td>
                                                    <td class="d-none d-lg-block d-xl-block text-right">@item.Value.ValuesForMonthOfStatusDate.Budget.AsCurrency()</td>
                                                    <td class="text-right">@item.Value.ValuesForMonthOfStatusDate.Posted.AsCurrency()</td>
                                                </tr>
                                            }
                                            <tr>
                                                <td class="font-weight-bold">Resultat i alt</td>
                                                <td class="d-none d-lg-block d-xl-block font-weight-bold text-right">@Model.BudgetAccounts.ValuesForMonthOfStatusDate.Budget.AsCurrency()</td>
                                                <td class="font-weight-bold text-right">@Model.BudgetAccounts.ValuesForMonthOfStatusDate.Posted.AsCurrency()</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.Accounts != null && Model.Accounts.Count > 0)
                {
                    <div class="card d-none d-md-block d-lg-block d-xl-block">
                        <div class="card-header">
                            <a class="card-link" data-toggle="collapse" href="#collapseBalance">
                                <h5>Balance</h5>
                            </a>
                        </div>
                        <div id="collapseBalance" class="collapse" data-parent="#accountingAccordion">
                            <div class="card-body">
                                <dl>
                                    <dd class="mb-0"><a href="@Model.GetExportBalanceToCsvUrl(Url)"><i class="fas fa-download"></i>&nbsp;Eksportér balance</a></dd>
                                </dl>
                                @if (Model.Accounts.Any(item => item.Key.AccountGroupType == AccountGroupType.Assets))
                                {
                                    <dl class="mb-0">
                                        <dd class="mb-0">
                                            <div class="table-responsive">
                                                <table class="table table-sm">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th class="text-right">Aktiver</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (KeyValuePair<AccountGroupViewModel, AccountCollectionViewModel> item in Model.Accounts.Where(item => item.Key.AccountGroupType == AccountGroupType.Assets))
                                                        {
                                                            <tr>
                                                                <td>@item.Key.Name.ToHtmlString()</td>
                                                                <td class="text-right">@item.Value.ValuesAtStatusDate.Assets.AsCurrency()</td>
                                                            </tr>
                                                        }
                                                        <tr>
                                                            <td class="font-weight-bold">Aktiver i alt</td>
                                                            <td class="font-weight-bold text-right">@Model.Accounts.ValuesAtStatusDate.Assets.AsCurrency()</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </dd>
                                    </dl>
                                }
                                @if (Model.Accounts.Any(item => item.Key.AccountGroupType == AccountGroupType.Liabilities))
                                {
                                    <dl class="mb-0">
                                        <dd class="mb-0">
                                            <div class="table-responsive">
                                                <table class="table table-sm">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th class="text-right">Passiver</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (KeyValuePair<AccountGroupViewModel, AccountCollectionViewModel> item in Model.Accounts.Where(item => item.Key.AccountGroupType == AccountGroupType.Liabilities))
                                                        {
                                                            <tr>
                                                                <td>@item.Key.Name.ToHtmlString()</td>
                                                                <td class="text-right">@item.Value.ValuesAtStatusDate.Liabilities.AsCurrency()</td>
                                                            </tr>
                                                        }
                                                        <tr>
                                                            <td class="font-weight-bold">Passiver i alt</td>
                                                            <td class="font-weight-bold text-right">@Model.Accounts.ValuesAtStatusDate.Liabilities.AsCurrency()</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </dd>
                                    </dl>
                                }
                            </div>
                        </div>
                    </div>
                }
                @if (Model.Accounts != null)
                {
                    <div class="card">
                        <div class="card-header">
                            <a class="card-link" data-toggle="collapse" href="#collapseAccounts">
                                <h5>Konti</h5>
                            </a>
                        </div>
                        <div id="collapseAccounts" class="collapse" data-parent="#accountingAccordion">
                            <div class="card-body">
                                <dl>
                                    <dd class="mb-0"><a href="@Model.GetExportAccountCollectionToCsvUrl(Url)"><i class="fas fa-download"></i>&nbsp;Eksportér konti</a></dd>
                                </dl>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th class="d-none d-lg-block d-xl-block">Kontonr.</th>
                                                <th>Kontonavn</th>
                                                <th class="text-right">Saldo</th>
                                                <th><a href="#" onclick="javascript:$().newAccount('@Model.GetStartCreatingAccountUrl(Url)');"><i class="fas fa-plus"></i></a></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (KeyValuePair<AccountGroupViewModel, AccountCollectionViewModel> item in Model.Accounts)
                                            {
                                                <tr>
                                                    <td class="d-none d-lg-block d-xl-block"></td>
                                                    <td class="font-weight-bold">@item.Key.Name.ToHtmlString()</td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                                @foreach (AccountViewModel accountViewModel in item.Value)
                                                {
                                                    <tr>
                                                        <td class="d-none d-lg-block d-xl-block">@accountViewModel.AccountNumber.ToHtmlString()</td>
                                                        <td>@accountViewModel.AccountName.ToHtmlString()</td>
                                                        <td class="text-right">@accountViewModel.ValuesAtStatusDate.Balance.AsCurrency()</td>
                                                        <td>
                                                            <span class="fa-stack">
                                                                <a href="#" onclick="javascript:$().editAccount('@accountViewModel.GetStartUpdatingAccountUrl(Url)');"><i class="fas fa-pen"></i></a>
                                                                @if (accountViewModel.Deletable)
                                                                {
                                                                    <a href="#" onclick="javascript:$().askForDeletion('Slet konto', '@accountViewModel.GetDeleteAccountUrl(Url)', @accountViewModel.GetDeletionData(Html), $(this).parent().parent().parent());"><i class="fas fa-trash"></i></a>
                                                                }
                                                            </span>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.BudgetAccounts != null)
                {
                    <div class="card">
                        <div class="card-header">
                            <a class="card-link" data-toggle="collapse" href="#collapseBudgetAccounts">
                                <h5>Budgetkonti</h5>
                            </a>
                        </div>
                        <div id="collapseBudgetAccounts" class="collapse" data-parent="#accountingAccordion">
                            <div class="card-body">
                                <dl>
                                    <dd class="mb-0"><a href="@Model.GetExportBudgetAccountCollectionToCsvUrl(Url)"><i class="fas fa-download"></i>&nbsp;Eksportér budgetkonti</a></dd>
                                </dl>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th class="d-none d-lg-block d-xl-block">Kontonr.</th>
                                                <th>Kontonavn</th>
                                                <th class="d-none d-xl-block text-right">Budget</th>
                                                <th class="text-right">Bogført</th>
                                                <th><a href="#" onclick="javascript:$().newAccount('@Model.GetStartCreatingBudgetAccountUrl(Url)');"><i class="fas fa-plus"></i></a></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (KeyValuePair<BudgetAccountGroupViewModel, BudgetAccountCollectionViewModel> item in Model.BudgetAccounts)
                                            {
                                                <tr>
                                                    <td class="d-none d-lg-block d-xl-block"></td>
                                                    <td class="font-weight-bold">@item.Key.Name.ToHtmlString()</td>
                                                    <td class="d-none d-xl-block"></td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                                @foreach (BudgetAccountViewModel budgetAccountViewModel in item.Value)
                                                {
                                                    <tr>
                                                        <td class="d-none d-lg-block d-xl-block">@budgetAccountViewModel.AccountNumber.ToHtmlString()</td>
                                                        <td>@budgetAccountViewModel.AccountName.ToHtmlString()</td>
                                                        <td class="d-none d-xl-block text-right">@budgetAccountViewModel.ValuesForMonthOfStatusDate.Budget.AsCurrency()</td>
                                                        <td class="text-right">@budgetAccountViewModel.ValuesForMonthOfStatusDate.Posted.AsCurrency()</td>
                                                        <td>
                                                            <span class="fa-stack">
                                                                <a href="#" onclick="javascript:$().editAccount('@budgetAccountViewModel.GetStartUpdatingBudgetAccountUrl(Url)');"><i class="fas fa-pen"></i></a>
                                                                @if (budgetAccountViewModel.Deletable)
                                                                {
                                                                    <a href="#" onclick="javascript:$().askForDeletion('Slet budgetkonto', '@budgetAccountViewModel.GetDeleteBudgetAccountUrl(Url)', @budgetAccountViewModel.GetDeletionData(Html), $(this).parent().parent().parent());"><i class="fas fa-trash"></i></a>
                                                                }
                                                            </span>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.ContactAccounts != null)
                {
                    <div class="card">
                        <div class="card-header">
                            <a class="card-link" data-toggle="collapse" href="#collapseContactAccounts">
                                <h5>Kontaktkonti</h5>
                            </a>
                        </div>
                        <div id="collapseContactAccounts" class="collapse" data-parent="#accountingAccordion">
                            <div class="card-body">
                                <dl>
                                    <dd class="mb-0"><a href="@Model.GetExportContactAccountCollectionToCsvUrl(Url)"><i class="fas fa-download"></i>&nbsp;Eksportér kontaktkonti</a></dd>
                                </dl>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th class="d-none d-lg-block d-xl-block">Kontonr.</th>
                                                <th>Kontonavn</th>
                                                <th class="text-right">Saldo</th>
                                                <th><a href="#" onclick="javascript:$().newAccount('@Model.GetStartCreatingContactAccountUrl(Url)');"><i class="fas fa-plus"></i></a></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (ContactAccountViewModel contactAccountViewModel in Model.ContactAccounts)
                                            {
                                                <tr>
                                                    <td class="d-none d-lg-block d-xl-block">@contactAccountViewModel.AccountNumber.ToHtmlString()</td>
                                                    <td>@contactAccountViewModel.AccountName.ToHtmlString()</td>
                                                    <td class="text-right">@contactAccountViewModel.ValuesAtStatusDate.Balance.AsCurrency()</td>
                                                    <td>
                                                        <span class="fa-stack">
                                                            <a href="#" onclick="javascript:$().editAccount('@contactAccountViewModel.GetStartUpdatingContactAccountUrl(Url)');"><i class="fas fa-pen"></i></a>
                                                            @if (contactAccountViewModel.Deletable)
                                                            {
                                                                <a href="#" onclick="javascript:$().askForDeletion('Slet kontaktkonto', '@contactAccountViewModel.GetDeleteContactAccountUrl(Url)', @contactAccountViewModel.GetDeletionData(Html), $(this).parent().parent().parent());"><i class="fas fa-trash"></i></a>
                                                            }
                                                        </span>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
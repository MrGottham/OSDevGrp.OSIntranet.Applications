@page
<div id="swagger-ui"></div>
@section Stylesheets {
    <link rel="stylesheet" type="text/css" href="/lib/swagger-ui/dist/css/swagger-ui.css" />
}
@section Scripts {
    <script src="/lib/swagger-ui/dist/js/swagger-ui-bundle.js" charset="UTF-8"></script>
    <script src="/lib/swagger-ui/dist/js/swagger-ui-standalone-preset.js" charset="UTF-8"></script>
    <script>
        window.onload = function() {
            // Create plugin for logout
            const logoutPlugin = () => ({
                statePlugins: {
                    auth: {
                        wrapActions: {
                            logout: (oriAction) => (keys) => {
                                console.log("Logout from following securities:", keys);
                                return oriAction(keys); // don't forget! otherwise, Swagger UI won't logout
                            }
                        }
                    }
                }
            });

            // Begin Swagger UI call region
            const ui = SwaggerUIBundle({
                url: '/api/swagger/v1/swagger.json',
                dom_id: '#swagger-ui',
                deepLinking: true,
                presets: [
                    SwaggerUIBundle.presets.apis,
                    SwaggerUIStandalonePreset
                ],
                plugins: [
                    SwaggerUIBundle.plugins.DownloadUrl,
                    logoutPlugin
                ],
                layout: "BaseLayout",
                responseInterceptor: function (response) {
                    if (response.status === undefined || response.status === null || response.status != 200) {
                        return response;
                    }
                    if (response.obj === undefined || response.obj === null) {
                        return response;
                    }
                    if (response.obj.token_type === undefined || response.obj.token_type === null || response.obj.token_type !== "Bearer") {
                        return response;
                    }
                    if (response.obj.access_token === undefined || response.obj.access_token === null) {
                        return response;
                    }
                    ui.preauthorizeApiKey(response.obj.token_type, response.obj.access_token);
                    return response;
                }
            });

            window.ui = ui;
        }
    </script>
}